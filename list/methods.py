'''
리스트 메소드
1. append(): 원소를 하나 삽입 O(1)
2. sort(): 정렬기능 -> 오름차순 O(NlogN)
   sort(reverse = True)-> 내림차순 O(NlogN)
3. reverse(): 원소를 거꾸로 출력 O(n) 
4. insert(인덱스, 값): 해당 인덱스에 원소 삽입 O(n)
5. count(값): 특정한 값을 가지는 원소의 개수를 출력 O(n)
6. remove(값): 특정한 값을 가지는 원소를 제거 O(n)
    이때, 일치하는 원소가 여러 개면 하나만 제거!
-> 결과가 리스트로 출력되는 경우 리스트에 메소스 활용 시 리스트에 대입됨
'''

a = [1,2,4,3,5]

#원소 삽입
a.append(6)
print("원소 6 삽입 후: ", a)# [1,2,4,3,5,6]

#오름차순 정렬
a.sort()
print("오름차순 정렬: ", a)# [1,2,3,4,5,6]

#내림차순 정렬
a.sort(reverse=True)
print("내림차순 정렬: ", a)# [6,5,4,3,2,1]

#원소 거꾸로
a.reverse()
print("원소 거꾸로: ", a)# [1,2,3,4,5,6]

# 인덱스에 원소 추가
a.insert(2, 2)
print("인덱스2 에 원소2 추가: ", a)# [1,2,2,3,4,5,6]

#원소 개수 세기 (결과가 리스트가 아닌 정수)
print("2인 원소의 개수: ", a.count(2))# 2

#원소 삭제 (2가 여러개여도 하나만 삭제됨)
a.remove(2)
print("원소 2 삭제: ", a)# [1,2,3,4,5,6]
